/* these all apply to the body element -> global rules */

* {
    border: none;
    padding: 0;
    margin: 0;
    box-sizing: border-box; 
  }
  
  .hidden { display: none; }
  
  html, body { height: 100% }
  
  body { 
  font-family: sans-serif;
  background-color: black;
  color: white;
  
  background-image: url("../images/background.webp");
  background-repeat: no-repeat;
  background-size: contain;
  }
  
  /* main header rules */
  header {
    position: sticky;
    top: 0;
    display: flex;
    justify-content: end;
  }
  
  #main-logo { width: 220px; padding: 10px 20px; margin-left: auto; }
  
  /* main rules here */
  #character-nav { margin-left: 30%; max-width: 60%; }
  
  .characters { list-style-type: none; }
  
  .characters li { 
    display: inline-block;
    height: 220px;
    margin: 10px 8px;
  
    background-color: black;
  
    text-align: left;
  
    cursor: pointer;
  }
  
  .characters li h5 {
    color: white;
    padding: 12px 8px;
  }
  
  .characters li a { text-decoration: none; }
  

  
  .red_bumper {
    width: 100%;
    height: 6px;
    background-color: green;
  }
  
  article { 
    padding: 20px;
    margin-left: 30%;
  }
  
  /* select the h3 tag inside the article tag on the page */
  /* a selector followed by a space and then ANOTHER selector gets a reference to the parent element and then the child element or elements inside of it */
  article h3  {
    font-size: 2.5em;
    margin-bottom: 14px;
  }
  
  /* select the p tag inside the article tag on the page */
  article p {
    font-size: 1.5em;
    line-height: 1.2;
  }
  
.sprite {
    width: 150px;
    height: 150px;
    
    background-image: url('../images/flagSprites.png');
}
  
  #carol { background-position: -150px 0; }
  #clint { background-position: -300px 0; }
  #hulk { background-position: -450px 0; }
  #thor { background-position: -600px 0; }
  #france { background-position: -750px 0; }
  
  .sprite:hover { background-position-y: -150px !important; }
  
  /* footer rules here */
  footer {
    color: white;
    padding: 20px 0;
    text-align: center;
  }
  
  .sticky_footer {
    position: sticky;
    top: 100%;
    height: 80px;
  
    background-color: rgba(0, 0, 0, 0.8);
  }
  
  /* lightbox rules here */
  
  .lightbox { 
    width: 100vw; /* vw = viewport width => screen width */
    height: 100vh; /* vh = viewport height => screen height */
  
    position: absolute;
    top: 0;
    left: 0;
  
    background-color: rgba(0, 0, 0, 0.85);
    background-image: url('../images/argentina-team.jpg');
    background-repeat: no-repeat;
  
    background-size: 55vh; /* 55% of the viewport height */
    background-position: left;
  
    display: none;
  }
  
  #lightbox2 { background-image: url('../images/usa-team.jpg'); }
  #lightbox3 { background-image: url('../images/iran-team.jpg'); }
  #lightbox4 { background-image: url('../images/brazil-team.jpg'); }
  #lightbox5 { background-image: url('../images/mexico-team.jpg'); }
  #lightbox6 { background-image: url('../images/france-team.jpg'); }
  
  .lightbox_close {
    position: relative;
    top: 20px;
    left: 95%;
  
    color: white;
    font-size: 3em;
  
    text-decoration: none;
  
    font-weight: bolder;
  }
  
  .lightbox_close:hover { opacity: 0.5; color: red; }
  
  .lightbox article {
    width: 55%;
    margin-left: 40%;
    padding-top: 50px;
  }
  
  .lb_text, .lb_heading { text-align: left; }
  
  .lb_text {
    line-height: 1.6 !important;
    margin-left: 0;
    padding-top: 2em;
  }
  
  /* turn the lightbox on using the :target pseudo selector */
  .lightbox:target { display: block; }


/* this is an attribute selector -> pick ONLY the inputs whose attribute type is checkbox */
input[type="checkbox"] { margin-right: 8px; }

/* ::after rules go here */

/* checked items get a pseudo-class of "checked" -> we can select ONLY the checkboxes that have been checked (selected) and add style(s) to them */
input[type="checkbox"]:checked + span::after {
  content: '\1F44D';
  width: 25px;
  height: 25px;
  padding: 4px;
  border-radius: 50%;
  background-color: white;
  border: 4px solid green;
  position: absolute;
  /* top: 10px;
  right: 18px; */
  font-size: 1em;

  animation: fadeIn 0.8s;
}



  
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}